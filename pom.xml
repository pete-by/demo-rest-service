<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.axamit.springboot</groupId>
	<artifactId>demo-rest-service</artifactId>
	<version>${revision}+${sha1}</version> <!-- cant use ${git.commit.id.abbrev} -->
	<name>demo-rest-service</name>
	<description>Demo project for Spring Boot Rest Service with Kubernetes</description>

	<properties>
		<!-- TODO: jgitver-maven-plugin -->
		<revision>1.0.0</revision>
		<sha1>local</sha1> <!-- should be overrode by build agent -->
		<java.version>11</java.version>
		<image.path>peteby/${project.artifactId}</image.path>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.18</version>
		</dependency>

		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>3.4.5</version>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- This plugin is used to create and push Docker image -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>2.7.0</version>
				<configuration>
					<from>
						<!--image>adoptopenjdk/openjdk11:jdk-11.0.9.1_1-centos</image-->
						<image>gcr.io/distroless/java:${java.version}</image>
					</from>
					<to>
						<image>${image.path}</image>
						<tags>
							<tag>${git.commit.id.abbrev}</tag>
						</tags>
					</to>
					<container>
						<user>nobody:nobody</user>
					</container>
				</configuration>
			</plugin>
			<plugin>
				<!-- See https://www.baeldung.com/spring-git-information -->
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.0.3</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
					<execution>
						<id>validate-the-git-infos</id>
						<goals>
							<goal>validateRevision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- To not check to remote repos -->
					<offline>true</offline>
					<!-- When working with project with submodules, setting this flag makes sure, that plugin works only for parent repository -->
					<runOnlyOnce>true</runOnlyOnce>
					<!-- To allow using git props in pom.xml -->
					<injectAllReactorProjects>true</injectAllReactorProjects>
					<failOnNoGitDirectory>false</failOnNoGitDirectory>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					<!-- <format>json</format> -->
					<excludeProperties>
						<!-- hide personal info -->
						<excludeProperty>git.user.*</excludeProperty>
						<excludeProperty>git.commit.user.*</excludeProperty>
						<excludeProperty>git.build.user.*</excludeProperty>
					</excludeProperties>
				</configuration>
			</plugin>

			<!--
				Used to create (and publish) helm package
			    Note: currently uses Helm binary through system path
			-->

			<!-- Used to render helm templates for Kustomize -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>compile</phase>
					</execution>
				</executions>
				<configuration>
					<executable>helm</executable>
					<workingDirectory>${project.basedir}/helm</workingDirectory>
					<arguments>
						<argument>template</argument>
						<argument>--debug</argument>
						<argument>.</argument>
						<argument>--output-dir</argument>
						<argument>../k8s</argument>
					</arguments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.kiwigrid</groupId>
						<artifactId>helm-maven-plugin</artifactId>
						<version>5.6</version>
						<configuration>
							<chartDirectory>${project.basedir}/helm</chartDirectory>
							<chartVersion>${project.version}</chartVersion>
							<!-- This is the related section to use local binary with auto-detection disabled. -->
							<useLocalHelmBinary>true</useLocalHelmBinary>
							<skipInit>true</skipInit>
							<skipDryRun>true</skipDryRun>
							<skipUpload>true</skipUpload>
							<settings>${settings}</settings>
						</configuration>
						<executions>
							<execution>
								<id>package.${env}</id>
								<goals>
									<goal>package</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<repository>
					<uniqueVersion>true</uniqueVersion>
					<id>axamit.webteam.dev</id>
					<name>Webteam Dev Repository</name>
					<url>https://axamit.jfrog.io/artifactory/webteam-java-dev-local</url>
					<layout>default</layout>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>env</name>
					<value>prod</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.kiwigrid</groupId>
						<artifactId>helm-maven-plugin</artifactId>
						<version>5.6</version>
						<configuration>
							<chartDirectory>${project.basedir}/helm</chartDirectory>
							<chartVersion>${project.version}</chartVersion>
							<!-- This is the related section to use local binary with auto-detection disabled. -->
							<useLocalHelmBinary>true</useLocalHelmBinary>
							<skipInit>true</skipInit>
							<skipDryRun>true</skipDryRun>
							<settings>${settings}</settings>
							<uploadRepoStable>
								<name>helm-stable</name>
								<url>https://axamit.jfrog.io/artifactory/helm-stable</url>
								<!-- Artifactory requires basic authentication -->
								<!-- which is supported from HELM version >= 2.9 -->
								<type>ARTIFACTORY</type>
							</uploadRepoStable>
						</configuration>
						<executions>
							<execution>
								<id>package.${env}</id>
								<goals>
									<goal>package</goal>
								</goals>
								<phase>package</phase>
							</execution>
							<execution>
								<id>upload.${env}</id>
								<goals>
									<goal>upload</goal>
								</goals>
								<phase>deploy</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<repository>
					<uniqueVersion>true</uniqueVersion>
					<id>axamit.webteam.prod</id>
					<name>Webteam Prod Repository</name>
					<url>https://axamit.jfrog.io/artifactory/webteam-java-prod-local</url>
					<layout>default</layout>
				</repository>
			</distributionManagement>
		</profile>
	</profiles>

</project>
